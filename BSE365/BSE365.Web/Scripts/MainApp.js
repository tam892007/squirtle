function StringToXML(e){if(window.ActiveXObject){var t=new ActiveXObject("Microsoft.XMLDOM");return t.loadXML(e),t}return(new DOMParser).parseFromString(e,"text/xml")}var mainApp=angular.module("mainApp",["ui.router","ui.bootstrap","authApp","ngResource","ui.tree","smart-table","underscore","angularFileUpload","ngImgCrop","ngMessages","angular-loading-bar","ui.validate","reCAPTCHA","commonApp","ui-notification","ngSanitize","timer","SignalR","localization"]);mainApp.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/login"),e.state("home",{url:"/",templateUrl:"app/main/home/home.html"}).state("login",{url:"/login",templateUrl:"app/authentication/login/login.html",controller:"loginController"}).state("resetPassword",{url:"/resetpassword",templateUrl:"app/authentication/password/resetPassword.html",controller:"resetPasswordController"}).state("forceResetPassword",{url:"/forceResetPassword",templateUrl:"app/main/account/account-resetPassword.html",controller:"accountPasswordController"}).state("refresh",{url:"/refresh",templateUrl:"app/authentication/refresh/refresh.html",controller:"refreshController"}).state("pin",{"abstract":!0,templateUrl:"app/common/templates/empty.html"}).state("pin.transfer",{url:"/transfer",templateUrl:"app/main/pin/pin.html",controller:"pinController"}).state("pin.rate",{url:"/rate",templateUrl:"app/main/pin/rate.html",controller:"rateController"}).state("user",{"abstract":!0,url:"/user",templateUrl:"app/main/user/user-info.html",controller:"userController"}).state("user.default",{url:"/",templateUrl:"app/main/user/user-info.default.html",controller:"userDefaultController"}).state("user.register",{url:"/register",templateUrl:"app/main/user/user-info.register.html",controller:"userRegisterController"}).state("user.tree",{url:"/tree",templateUrl:"app/main/user/user-info.tree.html",controller:"userTreeController"}).state("trade",{"abstract":!0,url:"/trade",templateUrl:"app/main/trade/trade-info.html",controller:"tradeInfoController"}).state("trade.statistic",{url:"/",templateUrl:"app/main/trade/trade-statistic.html",controller:"tradeStatisticController"}).state("trade.history",{url:"/history",templateUrl:"app/main/trade/trade-history.html",controller:"tradeHistoryController"}).state("trade.punishment",{url:"/punishment",templateUrl:"app/main/trade/trade-punishment.html",controller:"tradePunishmentController"}).state("trade.bonus",{url:"/bonus",templateUrl:"app/main/trade/trade-bonus.html",controller:"tradeBonusController"}).state("transaction",{"abstract":!0,url:"/transaction",templateUrl:"app/main/transaction/info.html",controller:"transactionInfoController"}).state("transaction.history",{url:"/history",templateUrl:"app/main/transaction/info-history.html",controller:"transactionInfoHistoryController"}).state("transaction.history.details",{url:"/:key",templateUrl:"app/main/transaction/transactionDetails-details.html",controller:"transactionInfoDetailsController"}).state("transaction.punishment",{url:"/punishment",templateUrl:"app/main/transaction/info-punishment.html",controller:"transactionInfoPunishmentController"}).state("transaction.punishment.details",{url:"/:key",templateUrl:"app/main/transaction/transactionDetails-details.html",controller:"transactionInfoDetailsController"}).state("transaction.bonus",{url:"/bonus",templateUrl:"app/main/transaction/info-bonus.html",controller:"transactionInfoBonusController"}).state("transaction.bonus.details",{url:"/:key",templateUrl:"app/main/transaction/transactionDetails-details.html",controller:"transactionInfoDetailsController"}).state("waitinggiver",{url:"/waitinggiver",templateUrl:"app/main/account/waitingGiver.html",controller:"waitingGiverController"}).state("waitingreceiver",{url:"/waitingreceiver",templateUrl:"app/main/account/waitingReceiver.html",controller:"waitingReceiverController"}).state("account",{"abstract":!0,url:"/account",templateUrl:"app/main/account/account.html",controller:"accountController"}).state("account.default",{url:"/",templateUrl:"app/main/account/account-default.html",controller:function(){}}).state("account.details",{url:"/:key",templateUrl:"app/main/account/account-edit.html",controller:"accountInfoController"}).state("currentTransaction",{url:"/trade/current",templateUrl:"app/main/transaction/current.html",controller:"transactionCurrentController"}).state("allTransactions",{url:"/trade/all-transactions",templateUrl:"app/main/transaction/transactionList.html",controller:"transactionListController"}).state("reportedTransactions",{url:"/trade/reported-transactions",templateUrl:"app/main/transaction/transactionReported.html",controller:"transactionReportedController"}).state("association",{url:"/association",templateUrl:"app/main/association/association.html",controller:"associationController"})}]),mainApp.config(["$httpProvider",function(e){e.interceptors.push("authInterceptorService")}]),mainApp.run(["authService",function(e){e.fillAuthData()}]),mainApp.config(["treeConfig",function(e){e.defaultCollapsed=!0}]),mainApp.config(["cfpLoadingBarProvider",function(e){e.includeSpinner=!1}]),mainApp.config(["reCAPTCHAProvider","recaptchaSettings",function(e,t){e.setPublicKey(t.publicKey),e.setOptions({theme:"red"})}]),mainApp.config(["NotificationProvider",function(e){e.setOptions({delay:2500,startTop:20,startRight:10,verticalSpacing:20,horizontalSpacing:20,positionX:"right",positionY:"bottom",closeOnClick:!0,maxCount:3})}]),mainApp.factory("AccountState",function(){var e={Default:0,WaitGive:1,Gave:2,WaitReceive:3,InGiveTransaction:11,InReceiveTransaction:12,NotGive:21,NotConfirm:22,ReportedNotTransfer:23,AbandonOne:31};return e.display=function(t){switch(t){case e.Default:return"Default";case e.WaitGive:return"Wait Give";case e.Gave:return"Gave";case e.WaitReceive:return"Wait Receive";case e.InGiveTransaction:return"In Give Transaction";case e.InReceiveTransaction:return"In Receive Transaction";case e.NotGive:return"Not Give";case e.NotConfirm:return"Not Confirm";case e.ReportedNotTransfer:return"Reported Not Transfer";case e.AbandonOne:return"Abandoned One";default:return""}},e}),mainApp.factory("WaitingType",function(){var e={Default:0,Abandon:31,Bonus:51};return e.display=function(t){switch(t){case e.Default:return"Default";case e.Abandon:return"Abandoned";case e.Bonus:return"Bonus";default:return""}},e}),mainApp.factory("PriorityLevel",function(){var e={Default:0,Priority:1,High:2,Highest:10};return e.display=function(t){switch(t){case e.Default:return"Default";case e.Priority:return"Priority";case e.High:return"High";case e.Highest:return"Highest";default:return""}},e}),mainApp.factory("TransactionState",function(){var e={Begin:0,Transfered:1,Confirmed:2,NotTransfer:21,NotConfirm:22,ReportedNotTransfer:23,Abandoned:31,Failed:51};return e.display=function(t){switch(t){case e.Begin:return"Begin";case e.Transfered:return"Transfered";case e.Confirmed:return"Confirmed";case e.NotTransfer:return"Not Transfer";case e.NotConfirm:return"Not Confirm";case e.ReportedNotTransfer:return"Reported Not Transfer";case e.Abandoned:return"Abandoned";case e.Failed:return"Failed";default:return""}},e}),mainApp.factory("TransactionType",function(){var e={Default:0,Abandoned:31,Replacement:41,Bonus:51};return e.display=function(t){switch(t){case e.Default:return"Default";case e.Abandoned:return"Abandoned";case e.Replacement:return"Replacement";case e.Bonus:return"Bonus";default:return""}},e}),mainApp.factory("ReportResult",function(){var e={Default:0,GiverTrue:1,ReceiverTrue:2,BothTrue:11,BothFalse:12};return e.display=function(t){switch(t){case e.Default:return"Default";case e.GiverTrue:return"Giver True";case e.ReceiverTrue:return"Receiver True";case e.BothTrue:return"Both True";case e.BothFalse:return"Both False";default:return""}},e}),mainApp.factory("UserState",function(){var e={Default:0,NotGive:21,NotConfirm:22};return e.display=function(t){switch(t){case e.Default:return"Default";case e.NotGive:return"Not Give";case e.NotConfirm:return"Not Confirm";default:return""}},e}),mainApp.factory("MessageState",function(){var e={UnRead:0,Readed:1,Dissmissed:2};return e.display=function(t){switch(t){case e.UnRead:return"UnRead";case e.Readed:return"Readed";case e.Dissmissed:return"Dissmissed";default:return""}},e}),mainApp.factory("ConfigData",function(){var e={dateFormat:"yyyy/MM/dd",dateTimeFormat:"yyyy/MM/dd - HH:mm:ss"};return e}),mainApp.filter("yesno",[function(){return function(e){return e?"Yes":"No"}}]),mainApp.config(["stConfig","filterSetting",function(e,t){e.pagination.itemsByPage=t.pagination.itemsByPage,e.pagination.displayedPages=t.pagination.displayedPages,e.pagination.template="app/common/templates/pagination.html"}]),mainApp.run(["$anchorScroll",function(e){e.yOffset=50}]),mainApp.controller("accountController",["$scope","$state","accountService","Notification","AccountState","PriorityLevel","UserState","ConfigData",function(e,t,n,a,i,r,o,s){e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryAccount(JSON.stringify(t),function(n){e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number)})},e.reload=function(){e.loadData()},e.viewDefails=function(n){e.current&&(e.current.selected=!1),n.selected=!0,e.current=n,t.go("^.details",{key:n.userName})},e.getAccountState=function(e){var t=e.UserState==o.NotGive||e.UserState==o.NotConfirm?o.display(e.userState)+" ("+e.relatedAccount+")":i.display(e.state);return t},e.init=function(){e.AccountState=i,e.PriorityLevel=r,e.UserState=o,e.ConfigData=s},e.init()}]),mainApp.controller("accountInfoController",["$scope","$stateParams","accountService","Notification","AccountState","PriorityLevel","UserState",function(e,t,n,a,i,r,o){e.getData=function(){n.status({key:t.key},{key:t.key},function(t){e.info=t,e.info.newPriority=e.info.priority,e.info.newState=e.info.state})},e.queueGive=function(){e.info.isAllowGive=!1,n.queueGive({key:e.info.userName},{key:e.info.userName},function(t){a.success("Queue give successful!"),e.getData()},function(t){e.info.isAllowGive=!0,a.success(t)})},e.queueReceive=function(){e.info.isAllowReceive=!1,n.queueReceive({key:e.info.userName},{key:e.info.userName},function(t){a.success("Queue receive successful!"),e.getData()},function(t){e.info.isAllowReceive=!0,a.success(t)})},e.setPriority=function(){n.setAccountPriority({userName:e.info.userName,priority:e.info.newPriority},function(e){a.success("Priority Changed!")})},e.setAccountState=function(){n.setAccountState({userName:e.info.userName,state:e.info.newState},function(t){a.success("State Changed!"),e.getData()})},e.init=function(){e.UserState=o,e.AccountState=i,e.accountStateToSelect=[{value:i.Default,text:"Giveable"},{value:i.Gave,text:"Receivable"}],e.PriorityLevel=r,e.priorityToSelect=[{value:r.Default,text:r.display(r.Default)},{value:r.Priority,text:r.display(r.Priority)},{value:r.High,text:r.display(r.High)},{value:r.Highest,text:r.display(r.Highest)}],e.getData()},e.init()}]),mainApp.controller("accountPasswordController",["$scope","accountService",function(e,t){e.requestNewPassword=function(){e.message="",t.forceResetPassword({id:e.forgotUserName},function(t){e.message="Reset password successfully!"},function(e){console.log(e)})}}]),mainApp.factory("accountService",["$resource",function(e){return e(":path",{},{status:{method:"POST",params:{path:"api/trade/accountStatus",key:"key"}},setAccountPriority:{method:"POST",params:{path:"api/trade/setAccountPriority"}},setAccountState:{method:"POST",params:{path:"api/trade/setAccountState"}},queueGive:{method:"POST",params:{path:"api/trade/queueGive",key:"key"}},queueReceive:{method:"POST",params:{path:"api/trade/queueReceive",key:"key"}},queryAccount:{method:"POST",params:{path:"api/trade/queryAccount"}},queryHistory:{method:"POST",params:{path:"api/trade/queryHistory",key:"key"},isArray:!0},queryWaitingGivers:{method:"POST",params:{path:"api/trade/queryWaitingGivers"}},queryWaitingReceivers:{method:"POST",params:{path:"api/trade/queryWaitingReceivers"}},mapForReceiver:{method:"POST",params:{path:"api/trade/mapForReceiver"}},forceResetPassword:{method:"GET",params:{path:"api/Account/ForceResetPassword",id:"id"}}})}]),mainApp.controller("waitingGiverController",["$scope","$state","accountService","Notification","PriorityLevel","WaitingType","ConfigData",function(e,t,n,a,i,r,o){e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryWaitingGivers(JSON.stringify(t),function(n){e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number)})},e.reload=function(){e.loadData()},e.viewDefails=function(t){e.target&&(e.target.selected=!1),t.selected=!0,e.target=t,e.selected=!0},e.init=function(){e.PriorityLevel=i,e.ConfigData=o,e.WaitingType=r,e.data=[],e.target={},e.selected=!1,e.isGiver=!0,e.isReceiver=!1},e.init()}]),mainApp.controller("waitingReceiverController",["$scope","$state","accountService","Notification","PriorityLevel","WaitingType","ConfigData",function(e,t,n,a,i,r,o){e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryWaitingReceivers(JSON.stringify(t),function(n){e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number)})},e.reload=function(){e.loadData()},e.viewDefails=function(t){e.target&&(e.target.selected=!1),t.selected=!0,e.target=t,e.selected=!0},e.mapForReceiver=function(){e.isProcessing=!0,n.mapForReceiver(e.target,function(t){if(e.reload(),t.amountLeft>0)e.target.amount=t.amountLeft,e.message="Not enough Givers!",a.success("Not enough Givers!");else{var n=e.data.indexOf(e.target);n>-1&&(delete e.data[n],e.data.splice(n,1)),e.target={},e.selected=!1,a.success("Map successful!")}e.isProcessing=!1},function(){e.isProcessing=!1})},e.init=function(){e.PriorityLevel=i,e.ConfigData=o,e.WaitingType=r,e.data=[],e.target={},e.selected=!1,e.isGiver=!1,e.isReceiver=!0,e.isProcessing=!1},e.init()}]),mainApp.controller("associationController",["$scope","userService","authService","$state",function(e,t,n,a){e.init=function(){e.associatedUsrs=[],e.selectedUsr={}},e.init(),e.getAssociation=function(){t.getCurrentAssociation(function(t){e.associatedUsrs=t})},e.getAssociation(),e["switch"]=function(t){e.selectedUsr.id!=t.id&&(e.password="",e.selectedUsr=t)},e.login=function(){var t={userName:e.selectedUsr.userName,password:e.selectedUsr.password,useRefreshTokens:!1};n.login(t).then(function(e){a.go("home")},function(t){e.message="Wrong password!"})},e.isMain=function(t){return null==t||t.userName.endsWith("A")||1==e.associatedUsrs.length}}]),mainApp.controller("chatController",["$scope","$location","$anchorScroll","messageService","MessageState",function(e,t,n,a,i){function r(e){var t=_.map(_.where(e.messages,{State:i.UnRead}),function(e){return e.Id});return a.updateMessageStates(t)}function o(e){if(e){var a="end-of-"+e;console.log(a),t.hash()!==a?t.hash(a):n()}}function s(){e.MessageState=i,a.isInitialed||a.initHub()}e.messageData=a,e.newChat=function(e){a.validAccount(e).done(function(t){t&&a.getChat(e)})},e.sendMessageTo=function(e){var t=e.newMessage;return e.newMessage="",o(e.account),a.sendMessageTo(e.account,t)},e.closeChat=function(e){r(e).done(function(){a.closeChat(e.account)})},e.onfocus=function(t){e.currentTarget=t.account,r(t)},e.onblur=function(t){e.currentTarget=null},e.$on("message:new-message-received",function(t,n){n.targetAccount==e.currentTarget&&(a.updateMessageStates([n.Id]),o(e.currentTarget))}),e.$on("message:hub-initiated",function(e,t){a.promise.done(function(){a.getUnreadMessages()})}),s()}]),mainApp.controller("indexController",["$scope","$state","authService","userService","$location","_","$timeout","localize",function(e,t,n,a,i,r,o,s){e.logOut=function(){n.logOut(),t.go("login")},e.authentication=n.authentication,e.$on("user:authenticated",function(t,n){e.getUserContext()}),e.$on("user:updateAvatar",function(t,n){e.userContext.avatar.url=n}),e.$on("user:getPinBalance",function(t,n){e.userContext.pinBalance=n}),e.$on("user:removePinBalance",function(t,n){isNaN(e.userContext.pinBalance)||(e.userContext.pinBalance-=n)}),e.getUserContext=function(){e.userContext={},a.getCurrentUserContext(function(t){e.userContext=t})};var c=i.search();e.authentication.isAuth&&"true"!=c.anonymous&&e.getUserContext(),e.forAdmin=function(){return e.userContext&&r.contains(e.userContext.roles,"superadmin")},e.changeLanguage=function(e){o(function(){s.setLanguage(e)})},e.isCurrentLanguage=function(e){return s.isCurrentLanguage(e)}}]),mainApp.factory("messageService",["$rootScope","$interval","Hub","_","$rootScope","MessageState",function(e,t,n,a,e,i){function r(t){if(!t){var n="target account is empty";throw console.log(n),n}var i=a.findWhere(l.chatData,{account:t});return null==i&&(i={account:t,messages:[]},l.chatData.push(i),e.$apply()),i}function o(t){if(!t){var n="target account is empty";throw console.log(n),n}var i=a.findWhere(l.chatData,{account:t});if(null!=i){var r=l.chatData.indexOf(i);r>-1&&(delete l.chatData[r],l.chatData.splice(r,1)),e.$apply()}return i}function s(e){if(!e){var t="error when add message!";throw console.log(t),t}var n=!1,i=null,o=null;e.FromAccount==l.currentAccount?(n=!0,i="You",o=e.ToAccount):(n=!1,i=e.FromAccount,o=e.FromAccount);var s=r(o);null==a.findWhere(s.messages,{Id:e.Id})&&(e.isOwner=n,e.Owner=i,s.messages.push(e))}function c(t){l.notifications.push(t),e.$broadcast("notification:new-notification-received",t),e.$apply()}function u(t){s(t),e.$broadcast("message:new-message-received",t),e.$apply()}var l=this;l.chatData=[],l.notifications=[],l.currentAccount=null,l.isInitialed=!1;var d={autoConnect:!1,listeners:{notify:c,message:u},methods:["getCurrentAccount","validAccount","getUnreadMessages","getMessageHistoryWith","sendMessageTo","updateMessageStates","getUnreadNotifications","updateNotificationStates"],queryParams:{token:"nazi-token"},errorHandler:function(e){console.error(e)},logging:!0},f=new n("Message",d);return l.hub=f,l.initHub=function(){},l.destroyHub=function(){l.hub.disconnect(),e.$broadcast("message:hub-destroyed")},e.$on("user:authenticated",l.initHub),e.$on("user:signedout",l.destroyHub),l.getCurrentAccount=function(){var e=l.hub.getCurrentAccount();return e.done(function(e){l.currentAccount=e}),e},l.validAccount=function(e){var t=l.hub.validAccount(e);return t},l.getUnreadMessages=function(){var t=l.hub.getUnreadMessages();return t.done(function(t){t&&(a.each(t,s),e.$apply())}),t},l.getMessageHistoryWith=function(t,n){var i=l.hub.getMessageHistoryWith(t,n);return i.done(function(t){t&&(a.each(t,s),e.$apply())}),i},l.sendMessageTo=function(t,n){var a=l.hub.sendMessageTo(t,n);return a.done(function(t){s(t),e.$apply()}),a},l.updateMessageStates=function(e){var t=l.hub.updateMessageStates(e);return t.done(function(){var t=[];a.each(l.chatData,function(e){t.push(a.flatten(a.pick(e,"messages")))}),a.each(e,function(e){var n=a.findWhere(t,{Id:e});null!=n&&(n.State=i.Readed)})}),t},l.getUnreadNotifications=function(){var t=l.hub.getUnreadNotifications();return t.done(function(t){a.each(t,function(e){null==a.findWhere(l.notifications,{Id:e.Id})&&l.notifications.push(e)}),e.$apply()}),t},l.updateNotificationStates=function(e){var t=l.hub.updateNotificationStates(e);return t.done(function(){a.each(e,function(e){var t=a.findWhere(l.notifications,{Id:e});t&&(t.State=i.Dissmissed)})}),t},l.getChat=r,l.closeChat=o,l}]),mainApp.controller("notificationController",["$scope","messageService",function(e,t){function n(){t.isInitialed||t.initHub()}e.messageData=t,e.dissmiss=function(e){t.updateNotificationStates([e.Id])},e.clear=function(){var e=t.notifications.map(function(e){return e.Id});t.updateNotificationStates(e),t.notifications=[]},e.refresh=function(){t.notifications=[],t.getUnreadNotifications()},e.$on("message:hub-initiated",function(e,n){t.promise.done(function(){t.getUnreadNotifications()})}),n()}]),mainApp.controller("pinController",["$scope","userService","pinService","$q","Notification","$state","$window",function(e,t,n,a,i,r,o){e.getCurrentUserPinInfo=function(){return t.getCurrentUserPinInfo().$promise},e.getCurrentUserPinTransactionHistory=function(){return n.getCurrentUserHistory().$promise},e.loadData=function(t){e.transactionHistories=[],n.getCurrentUserHistory(JSON.stringify(t),function(n){e.transactionHistories=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number)})},e.init=function(){e.failed=0,e.submitted=!1,e.currentPinBalance={},e.getCurrentUserPinInfo().then(function(t){e.currentPinBalance=t,e.$emit("user:getPinBalance",e.currentPinBalance.pinBalance)}),e.transaction={step:1}},e.init(),e.processToConfirm=function(){e.submitted=!0,e.frmTransfer.$valid&&(e.transaction.step=2)},e.goBack=function(){e.transaction.step=1},e.transferPIN=function(){n.transfer(e.transaction,function(e){i.success("Transaction has been completed successfully"),r.reload()},function(t){i.error("Some errors happenned"),e.failed=1,"invalid_captcha"==t.data.message&&(e.failed=2,o.Recaptcha.reload())})},e.interacted=function(t){return e.submitted||t.$dirty},e.validateUser=function(n){var i=a.defer();return t.checkName({name:n},function(t){t.isSuccessful?(e.toUser=t.result,i.resolve(t)):(e.toUser={},i.reject(t))}),i.promise}}]),mainApp.factory("pinService",["$resource",function(e){return e(":path",{},{transfer:{method:"POST",params:{path:"api/pin/transfer",transactionVM:"transactionVM"}},getCurrentUserHistory:{method:"POST",params:{path:"api/pin/getAll"}}})}]),mainApp.controller("rateController",["$scope","$q","_","$http",function(e,t,n,a){e.rate={},e.bitPrices=[],e.init=function(){e.bitPrices[0]={},e.bitPrices[1]={},e.bitPrices[2]={},e.bitPrices[3]={},e.bitPrices[4]={},e.bitPrices[5]={},e.bitPrices[6]={},e.bitPrices[0].quantity1=1,e.bitPrices[0].quantity2=50,e.bitPrices[1].quantity1=51,e.bitPrices[1].quantity2=100,e.bitPrices[2].quantity1=101,e.bitPrices[2].quantity2=200,e.bitPrices[3].quantity1=201,e.bitPrices[3].quantity2=300,e.bitPrices[4].quantity1=301,e.bitPrices[4].quantity2=400,e.bitPrices[5].quantity1=401,e.bitPrices[5].quantity2=1e3,e.bitPrices[6].quantity1=1001,e.bitPrices[6].quantity2="~",e.bitPrices[0].usd=9.09,e.bitPrices[1].usd=8.18,e.bitPrices[2].usd=7.27,e.bitPrices[3].usd=6.36,e.bitPrices[4].usd=5.45,e.bitPrices[5].usd=4.55,e.bitPrices[6].usd=3.64,a({method:"GET",url:"http://api.coindesk.com/v1/bpi/currentprice.json",skipInterceptor:!0}).then(function(t){e.rate.usd=t.data.bpi.USD.rate_float;for(var n=0;n<e.bitPrices.length;n++)e.bitPrices[n].bitCoin=e.bitPrices[n].usd/e.rate.usd})},e.init()}]),mainApp.controller("tradeBonusController",["$scope","$uibModal","tradeService","Notification","AccountState","ConfigData",function(e,t,n,a,i,r){e.updateStatus=function(){n.status({},function(t){e.info=t})},e.loadData=function(){e.data=[],n.queryBonus({},function(t){e.data=t})},e.viewDefails=function(n){var a=t.open({templateUrl:"app/main/transaction/transactionHistory.html",size:"lg",controller:"transactionPunishmentController",resolve:{targetData:function(){return n}}});a.result.then(function(t){e.loadData()})},e.claimBonus=function(){e.info.isAllowClaimBonus=!1,n.claimBonus({key:e.info.userName},{key:e.info.userName},function(t){a.success("Claim bonus successful!"),e.updateStatus()},function(t){e.info.isAllowClaimBonus=!0,a.success(t)})},e.init=function(){e.AccountState=i,e.ConfigData=r,e.data=[],e.loadData(),e.updateStatus()},e.init()}]),mainApp.controller("tradeHistoryController",["$scope","$uibModal","tradeService","Notification","AccountState","ConfigData",function(e,t,n,a,i,r){e.loadData=function(){e.data=[],n.queryHistory({},function(t){e.data=t})},e.viewDefails=function(n){var a=t.open({templateUrl:"app/main/transaction/transactionHistory.html",size:"lg",controller:"transactionHistoryController",resolve:{targetData:function(){return n}}});a.result.then(function(t){e.loadData()})},e.init=function(){e.AccountState=i,e.ConfigData=r,e.data=[],e.loadData()},e.init()}]),mainApp.controller("tradeInfoController",["$scope","tradeService","Notification","AccountState","PriorityLevel","UserState",function(e,t,n,a,i,r){e.updateStatus=function(){t.status({},function(t){e.info=t})},e.queueGive=function(){e.info.isAllowGive=!1,t.queueGive({},function(t){n.success("Queue give successful!"),e.updateStatus()},function(t){e.info.isAllowGive=!0,n.success(t)})},e.queueReceive=function(){e.info.isAllowReceive=!1,t.queueReceive({},function(t){n.success("Queue receive successful!"),e.updateStatus()},function(t){e.info.isAllowReceive=!0,n.success(t)})},e.init=function(){e.AccountState=a,e.UserState=r,e.PriorityLevel=i,e.updateStatus()},e.init()}]),mainApp.controller("tradePunishmentController",["$scope","$uibModal","tradeService","Notification","AccountState","ConfigData",function(e,t,n,a,i,r){e.loadData=function(){e.data=[],n.queryPunishment({},function(t){e.data=t})},e.viewDefails=function(n){var a=t.open({templateUrl:"app/main/transaction/transactionHistory.html",size:"lg",controller:"transactionPunishmentController",resolve:{targetData:function(){return n}}});a.result.then(function(t){e.loadData()})},e.init=function(){e.AccountState=i,e.ConfigData=r,e.data=[],e.loadData()},e.init()}]),mainApp.factory("tradeService",["$resource",function(e){return e(":path",{},{status:{method:"POST",params:{path:"api/trade/accountStatus"}},queueGive:{method:"POST",params:{path:"api/trade/queueGive"}},queueReceive:{method:"POST",params:{path:"api/trade/queueReceive"}},claimBonus:{method:"POST",params:{path:"api/trade/claimBonus"}},queryHistory:{method:"POST",params:{path:"api/trade/queryHistory"},isArray:!0},queryPunishment:{method:"POST",params:{path:"api/transaction/queryPunishment"},isArray:!0},queryBonus:{method:"POST",params:{path:"api/transaction/queryBonus"},isArray:!0}})}]),mainApp.controller("tradeStatisticController",["$scope","tradeService","Notification","AccountState","PriorityLevel",function(e,t,n,a,i){e.updateStatus=function(){t.status({},function(t){e.info=t})},e.queueGive=function(){info.isAllowGive=!1,t.queueGive({},function(t){n.success("Queue give successful!"),e.updateStatus()},function(e){info.isAllowGive=!0,n.success(e)})},e.queueReceive=function(){info.isAllowReceive=!1,t.queueReceive({},function(t){n.success("Queue receive successful!"),e.updateStatus()},function(e){info.isAllowReceive=!0,n.success(e)})},e.init=function(){e.AccountState=a,e.PriorityLevel=i,e.updateStatus()},e.init()}]),mainApp.controller("errorDlgController",["$scope","$uibModalInstance","rejection",function(e,t,n){function a(){n&&n.data&&(e.isJson=angular.isObject(n.data))}e.cancel=function(){t.close()},e.rejection=n,e.isCollapsed=!1,e.isHtml=!1,e.isJson=!1,a()}]),mainApp.controller("importPopupController",["$scope","$window","$uibModal","$log","$uibModalInstance","_","FileUploader","cfpLoadingBar","localStorageService","targetData",function(e,t,n,a,i,r,o,s,c,u){e.target={},e.data=[],e.uploader=new o({url:u.uploadLink}),e.upload=function(){e.isError=!1,e.uploaded=!1,e.importing=!0,s.start();var t=r.last(e.uploader.queue);t.upload()},e.ok=function(e){var t=e.url;t=t.replace("~/",""),i.close(t)},e.cancel=function(){i.dismiss("cancel")},e.uploaded=!1,e.isError=!1,e.importing=!1,e.uploader.queueLimit=2,e.uploader.filters.push({name:"size",fn:function(e){return e.size<=5242880}}),e.uploader.filters.push({name:"image",fn:function(t){return e.uploader.hasHTML5?/\/(png|jpeg|jpg)$/.test(t.file.type):!0}});var l=c.get("authorizationData");l&&(e.uploader.headers.Authorization="Bearer "+l.token),e.uploader.onAfterAddingFile=function(t){e.uploader.getIndexOfItem(t)&&e.uploader.removeFromQueue(0)},e.uploader.onErrorItem=function(t,a,i,r){e.isError=!0,e.importing=!1,s.complete();n.open({templateUrl:"app/main/transaction/errorDlgHandled.html",size:"lg",controller:"errorDlgController",resolve:{rejection:function(){return{data:a,statusText:"File is invalid. See techinical details for more information"}}}})},e.uploader.onSuccessItem=function(t,n,a,i){e.uploaded=!0,e.importing=!1,s.complete(),e.ok(n)}}]),mainApp.controller("transactionCurrentController",["$scope","_","$timeout","$uibModal","$window","transactionService","tradeService","Notification","AccountState","TransactionState","ConfigData",function(e,t,n,a,i,r,o,s,c,u,l){function d(){switch(e.info.state){case c.Default:break;case c.AbandonOne:break;case c.WaitGive:e.overviewState.queued=1,e.overviewState.give=0;break;case c.InGiveTransaction:e.overviewState.queued=1,e.overviewState.give=0;break;case c.Gave:e.overviewState.queued=1,e.overviewState.give=1,e.overviewState.waitCofirm=1,e.overviewState.receive=-1;break;case c.WaitReceive:e.overviewState.queued=1,e.overviewState.give=1,e.overviewState.waitCofirm=1,e.overviewState.receive=0;break;case c.InReceiveTransaction:e.overviewState.queued=1,e.overviewState.give=1,e.overviewState.waitCofirm=1,e.overviewState.receive=0;break;case c.NotGive:e.overviewState.queued=-1;break;case c.NotConfirm:e.overviewState.queued=-1;break;case c.ReportedNotTransfer:e.overviewState.queued=-1}console.log(e.overviewState)}function f(){e.info.state==c.InGiveTransaction?(e.accountDisplayTemplate=e.receiverInfoTemplateUrl,e.grState="giving",r.giveRequested({},function(e){p(e)})):e.info.state==c.InReceiveTransaction&&(e.accountDisplayTemplate=e.giverInfoTemplateUrl,e.grState="receiving",r.receiveRequested({},function(e){p(e)}))}function p(n){e.histories=[],t.each(n,m),e.transactions=n}function m(t){t.isAllowConfirmGave=t.state==u.Begin,t.isAllowConfirmReceived=t.state==u.Transfered,t.isAllowAbandonTransaction=e.info.isAllowAbandonTransaction&&t.state==u.Begin,t.isAllowAttachment=t.state!=u.Abandoned,t.isAllowUploadAttachment=t.state==u.Begin||t.state==u.Transfered,t.isAbandoned=t.state==u.Abandoned,g(t)}function g(n){e.histories.push({userName:"System",rating:6,time:n.created,action:"Created"});var a="";"giving"==e.grState?(a=n.receiverId,n.receivedDate&&e.histories.push({userName:a,rating:n.rating,time:n.receivedDate,action:"Received"})):(a=n.giverId,n.transferedDate&&e.histories.push({userName:a,rating:n.rating,time:n.transferedDate,action:"Transfered"})),e.histories=t.sortBy(e.histories,function(e){return e.time})}function v(){var n=t.filter(e.transactions,function(e){return e.state!=u.Confirmed});0==n.length&&(e.overviewState.queued=1,e.overviewState.give=1,e.overviewState.waitCofirm=1,e.overviewState.receive=1,e.overviewState.ended=1)}e.updateStatus=function(){return o.status({},function(t){e.info=t,d()}).$promise},e.queueGive=function(){e.info.isAllowGive=!1,o.queueGive({},function(t){s.success("Queue give successful!"),e.$emit("user:removePinBalance",1),e.updateStatus()},function(t){e.info.isAllowGive=!0,s.success(t)})},e.queueReceive=function(){e.info.isAllowReceive=!1,o.queueReceive({},function(t){s.success("Queue receive successful!"),e.updateStatus()},function(t){e.info.isAllowReceive=!0,s.success(t)})},e.moneyTransfered=function(t){e.isProcessing=!0,r.moneyTransfered(t,function(n){s.success("Money Transfered"),m(n);var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),e.isProcessing=!1})},e.moneyReceived=function(t){e.isProcessing=!0,r.moneyReceived(t,function(n){s.success("Money Received"),m(n);var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus().then(v),e.isProcessing=!1})},e.reportNotTransfer=function(t){e.isProcessing=!0,r.reportNotTransfer(t,function(n){s.success("Transaction Reported"),m(n);var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),e.isProcessing=!1})},e.updateImg=function(e){r.updateImg(e,function(e){s.success("Upload saved.")})},e.upload=function(t){var n=a.open({templateUrl:"app/main/transaction/importPopup.html",size:"lg",controller:"importPopupController",resolve:{targetData:function(){return{uploadLink:"api/transaction/upload"}}}});n.result.then(function(n){s.success("Upload successful.");i.StringToXML(n);t.attachmentUrl=n,t.attachmentUrl=t.attachmentUrl.replace("~/",""),e.updateImg(t)},function(){s.success("Upload error.")})},e.abandon=function(t){e.isProcessing=!0,r.abandonTransaction(t,function(n){
s.success("Transaction Abandoned"),m(n);var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),e.isProcessing=!1})},e.init=function(){e.grState="",e.giverInfoTemplateUrl="app/main/transaction/info-giver.html",e.receiverInfoTemplateUrl="app/main/transaction/info-receiver.html",e.TransactionState=u,e.AccountState=c,e.ConfigData=l,e.overviewState={queued:0,give:-1,waitCofirm:-1,receive:-1,ended:-1},e.histories=[],e.isProcessing=!1,e.updateStatus().then(function(e){f()})},e.init()}]),mainApp.controller("transactionHistoryController",["$scope","_","$timeout","$uibModal","$uibModalInstance","transactionService","tradeService","Notification","ConfigData","AccountState","TransactionState","targetData",function(e,t,n,a,i,r,o,s,c,u,l,d){function f(n){e.histories=[],t.each(n,function(e){e.isAllowConfirmGave=e.state==l.Begin,e.isAllowConfirmReceived=e.state==l.Transfered,e.isAllowAbandonTransaction=!1,e.isAllowAttachment=e.state!=l.Abandoned,e.isAllowUploadAttachment=e.state==l.Begin||e.state==l.Transfered,e.isAbandoned=e.state==l.Abandoned,p(e)}),e.transactions=n,m()}function p(n){e.histories.push({userName:"System",rating:6,time:n.created,action:"Created"});var a="";"giving"==e.grState?(a=n.receiverId,n.receivedDate&&e.histories.push({userName:a,rating:n.rating,time:n.receivedDate,action:"Received"})):(a=n.giverId,n.transferedDate&&e.histories.push({userName:a,rating:n.rating,time:n.transferedDate,action:"Transfered"})),e.histories=t.sortBy(e.histories,function(e){return e.time})}function m(){var n=t.every(e.transactions,function(e){return e.state==l.Confirmed});"giving"==e.grState?(e.overviewState.queued=1,n?(e.overviewState.give=1,e.overviewState.waitCofirm=1):e.overviewState.give=0):"receiving"==e.grState&&(e.overviewState.queued=1,e.overviewState.give=1,e.overviewState.waitCofirm=1,n?(e.overviewState.receive=1,e.overviewState.ended=1):e.overviewState.receive=0),console.log(e.overviewState)}e.getCurrentTransactions=function(){e.targetData.type==u.InGiveTransaction?(e.accountDisplayTemplate=e.receiverInfoTemplateUrl,e.grState="giving"):e.targetData.type==u.InReceiveTransaction&&(e.accountDisplayTemplate=e.giverInfoTemplateUrl,e.grState="receiving"),r.history(d,function(e){f(e)})},e.moneyTransfered=function(t){e.isProcessing=!0,r.moneyTransfered(t,function(n){s.success("Money Transfered");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.moneyReceived=function(t){e.isProcessing=!0,r.moneyReceived(t,function(n){s.success("Money Received");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.reportNotTransfer=function(t){e.isProcessing=!0,r.reportNotTransfer(t,function(n){s.success("Transaction Reported");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.updateImg=function(e){r.updateImg(e,function(e){s.success("Upload saved.")})},e.upload=function(t){var n=a.open({templateUrl:"app/main/transaction/importPopup.html",size:"lg",controller:"importPopupController",resolve:{targetData:function(){return{uploadLink:"api/transaction/upload"}}}});n.result.then(function(n){s.success("Upload successful."),t.attachmentUrl=n,e.updateImg(t)},function(){s.success("Upload error.")})},e.abandon=function(t){e.isProcessing=!0,r.abandonTransaction(t,function(n){s.success("Transaction Abandoned");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.init=function(){e.targetData=d,e.grState="",e.giverInfoTemplateUrl="app/main/transaction/info-giver.html",e.receiverInfoTemplateUrl="app/main/transaction/info-receiver.html",e.TransactionState=l,e.AccountState=u,e.ConfigData=c,e.overviewState={queued:0,give:-1,waitCofirm:-1,receive:-1,ended:-1},e.histories=[],e.isProcessing=!1,e.getCurrentTransactions()},e.init()}]),mainApp.controller("transactionInfoBonusController",["$scope","$state","transactionService","tradeService","Notification","TransactionType","TransactionState","ConfigData",function(e,t,n,a,i,r,o,s){function c(e){_.each(e,function(e){e.isGiving=e.currentAccount==e.giverId,e.isReceiving=e.currentAccount==e.receiverId,e.isAllowConfirmGave=e.isGiving&&e.state==o.Begin,e.isAllowConfirmReceived=e.isReceiving&&e.state==o.Transfered,e.isAllowAbandonTransaction=!1,e.isAllowAttachment=e.state!=o.Abandoned,e.isAllowUploadAttachment=e.isGiving&&(e.state==o.Begin||e.state==o.Transfered),e.isAbandoned=e.state==o.Abandoned})}function u(){a.status({},function(t){e.info=t})}e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryUserBonus(JSON.stringify(t),function(n){console.log(n),e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number),c(e.data)})},e.reload=function(){e.loadData()},e.viewDefails=function(n){e.current&&(e.current.selected=!1),n.selected=!0,e.current=n,t.go("transaction.bonus.details",{key:n.id})},e.claimBonus=function(){e.info.isAllowClaimBonus=!1,a.claimBonus({key:e.info.userName},{key:e.info.userName},function(e){i.success("Claim bonus successful!"),u()},function(t){e.info.isAllowClaimBonus=!0,i.success(t)})},e.init=function(){e.ConfigData=s,e.TransactionType=r,e.TransactionState=o,e.data=[],u()},e.init()}]),mainApp.controller("transactionInfoController",["$scope","tradeService","Notification","AccountState","PriorityLevel","UserState",function(e,t,n,a,i,r){e.updateStatus=function(){t.status({},function(t){e.info=t})},e.init=function(){e.AccountState=a,e.UserState=r,e.PriorityLevel=i,e.updateStatus()},e.init()}]),mainApp.controller("transactionInfoDetailsController",["$scope","_","$stateParams","$timeout","$uibModal","transactionService","Notification","ConfigData","AccountState","TransactionState",function(e,t,n,a,i,r,o,s,c,u){function l(t){e.target=t,t.isGiving=t.currentAccount==t.giverId,t.isReceiving=t.currentAccount==t.receiverId,t.isAllowConfirmGave=t.isGiving&&t.state==u.Begin,t.isAllowConfirmReceived=t.isReceiving&&t.state==u.Transfered,t.isAllowAbandonTransaction=!1,t.isAllowAttachment=t.state!=u.Abandoned,t.isAllowUploadAttachment=t.isGiving&&(t.state==u.Begin||t.state==u.Transfered),t.isAbandoned=t.state==u.Abandoned}e.getData=function(){r.transactionDetails({key:n.key},{key:n.key},function(e){l(e)})},e.moneyTransfered=function(t){e.isProcessing=!0,r.moneyTransfered(t,function(t){o.success("Money Transfered"),e.getData(),e.isProcessing=!1})},e.moneyReceived=function(t){e.isProcessing=!0,r.moneyReceived(t,function(t){o.success("Money Received"),e.getData(),e.isProcessing=!1})},e.reportNotTransfer=function(t){e.isProcessing=!0,r.reportNotTransfer(t,function(t){o.success("Transaction Reported"),e.getData(),e.isProcessing=!1})},e.updateImg=function(e){console.log("---"),r.updateImg(e,function(e){o.success("Upload saved.")})},e.upload=function(t){var n=i.open({templateUrl:"app/main/transaction/importPopup.html",size:"lg",controller:"importPopupController",resolve:{targetData:function(){return{uploadLink:"api/transaction/upload"}}}});n.result.then(function(n){o.success("Upload successful."),t.attachmentUrl=n,e.updateImg(t)},function(){o.success("Upload error.")})},e.abandon=function(t){e.isProcessing=!0,r.abandonTransaction(t,function(t){o.success("Transaction Abandoned"),e.getData(),e.isProcessing=!1})},e.init=function(){e.TransactionState=u,e.AccountState=c,e.ConfigData=s,e.isProcessing=!1,e.selected=!0,e.getData()},e.init()}]),mainApp.controller("transactionInfoHistoryController",["$scope","$state","transactionService","Notification","TransactionType","TransactionState","ConfigData",function(e,t,n,a,i,r,o){function s(e){_.each(e,function(e){e.isGiving=e.currentAccount==e.giverId,e.isReceiving=e.currentAccount==e.receiverId,e.isAllowConfirmGave=e.isGiving&&e.state==r.Begin,e.isAllowConfirmReceived=e.isReceiving&&e.state==r.Transfered,e.isAllowAbandonTransaction=!1,e.isAllowAttachment=e.state!=r.Abandoned,e.isAllowUploadAttachment=e.isGiving&&(e.state==r.Begin||e.state==r.Transfered),e.isAbandoned=e.state==r.Abandoned})}e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryUserHistory(JSON.stringify(t),function(n){console.log(n),e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number),s(e.data)})},e.reload=function(){e.loadData()},e.viewDefails=function(n){e.current&&(e.current.selected=!1),n.selected=!0,e.current=n,t.go("transaction.history.details",{key:n.id})},e.init=function(){e.ConfigData=o,e.TransactionType=i,e.TransactionState=r,e.data=[]},e.init()}]),mainApp.controller("transactionInfoPunishmentController",["$scope","$state","transactionService","Notification","TransactionType","TransactionState","ConfigData",function(e,t,n,a,i,r,o){function s(e){_.each(e,function(e){e.isGiving=e.currentAccount==e.giverId,e.isReceiving=e.currentAccount==e.receiverId,e.isAllowConfirmGave=e.isGiving&&e.state==r.Begin,e.isAllowConfirmReceived=e.isReceiving&&e.state==r.Transfered,e.isAllowAbandonTransaction=!1,e.isAllowAttachment=e.state!=r.Abandoned,e.isAllowUploadAttachment=e.isGiving&&(e.state==r.Begin||e.state==r.Transfered),e.isAbandoned=e.state==r.Abandoned})}e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryUserPunishment(JSON.stringify(t),function(n){console.log(n),e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number),s(e.data)})},e.reload=function(){e.loadData()},e.viewDefails=function(n){e.current&&(e.current.selected=!1),n.selected=!0,e.current=n,t.go("transaction.punishment.details",{key:n.id})},e.init=function(){e.ConfigData=o,e.TransactionType=i,e.TransactionState=r,e.data=[]},e.init()}]),mainApp.controller("transactionListController",["$scope","$state","transactionService","Notification","TransactionType","TransactionState","ConfigData",function(e,t,n,a,i,r,o){e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.queryTransaction(JSON.stringify(t),function(n){console.log(n),e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number)})},e.reload=function(){e.target={},e.loadData()},e.viewDefails=function(t){e.target&&(e.target.selected=!1),t.selected=!0,e.target=t,e.selected=!0},e.init=function(){e.ConfigData=o,e.TransactionType=i,e.TransactionState=r,e.data=[],e.target={},e.selected=!1},e.init()}]),mainApp.controller("transactionPunishmentController",["$scope","_","$timeout","$uibModal","$uibModalInstance","transactionService","tradeService","Notification","ConfigData","AccountState","TransactionState","targetData",function(e,t,n,a,i,r,o,s,c,u,l,d){function f(n){e.histories=[],t.each(n,function(e){e.isAllowConfirmGave=e.state==l.Begin,e.isAllowConfirmReceived=e.state==l.Transfered,e.isAllowAbandonTransaction=!1,e.isAllowAttachment=e.state!=l.Abandoned,e.isAllowUploadAttachment=e.state==l.Begin||e.state==l.Transfered,e.isAbandoned=e.state==l.Abandoned,p(e)}),e.transactions=n,m()}function p(n){e.histories.push({userName:"System",rating:6,time:n.created,action:"Created"});var a="";"giving"==e.grState?(a=n.receiverId,n.receivedDate&&e.histories.push({userName:a,rating:n.rating,time:n.receivedDate,action:"Received"})):(a=n.giverId,n.transferedDate&&e.histories.push({userName:a,rating:n.rating,time:n.transferedDate,action:"Transfered"})),e.histories=t.sortBy(e.histories,function(e){return e.time})}function m(){var n=t.every(e.transactions,function(e){return e.state==l.Confirmed});"giving"==e.grState?(e.overviewState.queued=1,n?(e.overviewState.give=1,e.overviewState.waitCofirm=1):e.overviewState.give=0):"receiving"==e.grState&&(e.overviewState.queued=1,e.overviewState.give=1,e.overviewState.waitCofirm=1,n?(e.overviewState.receive=1,e.overviewState.ended=1):e.overviewState.receive=0),console.log(e.overviewState)}e.getCurrentTransactions=function(){e.accountDisplayTemplate=e.receiverInfoTemplateUrl,e.grState="giving",f([d])},e.moneyTransfered=function(t){e.isProcessing=!0,r.moneyTransfered(t,function(n){s.success("Money Transfered");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.moneyReceived=function(t){e.isProcessing=!0,r.moneyReceived(t,function(n){s.success("Money Received");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.reportNotTransfer=function(t){e.isProcessing=!0,r.reportNotTransfer(t,function(n){s.success("Transaction Reported");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.updateImg=function(e){r.updateImg(e,function(e){s.success("Upload saved.")})},e.upload=function(t){var n=a.open({templateUrl:"app/main/transaction/importPopup.html",size:"lg",controller:"importPopupController",resolve:{targetData:function(){return{uploadLink:"api/transaction/upload"}}}});n.result.then(function(n){s.success("Upload successful."),t.attachmentUrl=n,e.updateImg(t)},function(){s.success("Upload error.")})},e.abandon=function(t){e.isProcessing=!0,r.abandonTransaction(t,function(n){s.success("Transaction Abandoned");var a=e.transactions.indexOf(t);-1!==a&&(e.transactions[a]=n),e.updateStatus(),getCurrentTransactions(),e.isProcessing=!1})},e.init=function(){e.targetData=d,e.grState="",e.giverInfoTemplateUrl="app/main/transaction/info-giver.html",e.receiverInfoTemplateUrl="app/main/transaction/info-receiver.html",e.TransactionState=l,e.AccountState=u,e.ConfigData=c,e.overviewState={queued:0,give:-1,waitCofirm:-1,receive:-1,ended:-1},e.histories=[],e.isProcessing=!1,e.getCurrentTransactions()},e.init()}]),mainApp.controller("transactionReportedController",["$scope","$state","transactionService","Notification","TransactionState","TransactionType","ReportResult","ConfigData",function(e,t,n,a,i,r,o,s){function c(t){e.target.result=t,n.applyReport(e.target,function(t){a.success("Transaction Applied."),e.reload()})}e.loadData=function(t){t?e.tableState=t:t=e.tableState,e.data=[],n.reportedTransactions(JSON.stringify(t),function(n){console.log(n),e.data=n.data,t.pagination.numberOfPages=Math.ceil(n.totalItems/t.pagination.number)})},e.reload=function(){e.target={},e.selected=!1,e.loadData()},e.viewDefails=function(t){e.target&&(e.target.selected=!1),t.selected=!0,e.target=t,e.selected=!0},e.giverTrue=function(){c(o.GiverTrue)},e.receiverTrue=function(){c(o.ReceiverTrue)},e.bothTrue=function(){c(o.BothTrue)},e.bothFalse=function(){c(o.BothFalse)},e.init=function(){e.ConfigData=s,e.TransactionType=r,e.TransactionState=i,e.ReportResult=o,e.data=[],e.target={},e.selected=!1},e.init()}]),mainApp.factory("transactionService",["$resource",function(e){return e(":path",{},{history:{method:"POST",params:{path:"api/transaction/history",key:"key"},isArray:!0},giveRequested:{method:"POST",params:{path:"api/transaction/giveRequested"},isArray:!0},receiveRequested:{method:"POST",params:{path:"api/transaction/receiveRequested"},isArray:!0},moneyTransfered:{method:"POST",params:{path:"api/transaction/moneyTransfered"}},moneyReceived:{method:"POST",params:{path:"api/transaction/moneyReceived"}},reportNotTransfer:{method:"POST",params:{path:"api/transaction/reportNotTransfer"}},updateImg:{method:"POST",params:{path:"api/transaction/updateImg"}},abandonTransaction:{method:"POST",params:{path:"api/transaction/abandonTransaction"}},queryTransaction:{method:"POST",params:{path:"api/transaction/queryTransaction"}},reportedTransactions:{method:"POST",params:{path:"api/transaction/reportedTransactions"}},applyReport:{method:"POST",params:{path:"api/transaction/applyReport"}},queryUserHistory:{method:"POST",params:{path:"api/transaction/queryUserHistory"}},queryUserPunishment:{method:"POST",params:{path:"api/transaction/queryUserPunishment"}},queryUserBonus:{method:"POST",params:{path:"api/transaction/queryUserBonus"}},transactionDetails:{method:"POST",params:{path:"api/transaction/transactionDetails",key:"key"}}})}]),mainApp.controller("dlgChangeAvatarController",["$scope","userService","FileUploader","_","localStorageService","$uibModalInstance","Notification",function(e,t,n,a,i,r,o){e.uploadImage=function(){var e=a.last(s.queue);e.upload()};var s=e.uploader=new n({autoUpload:!1,url:"api/user/updateAvatar"});s.filters.push({name:"size",fn:function(e){return e.size<=5242880}}),s.filters.push({name:"image",fn:function(e){return s.hasHTML5?/\/(png|jpeg|jpg)$/.test(e.file.type):!0}});var c=i.get("authorizationData");c&&(s.headers.Authorization="Bearer "+c.token),s.onAfterAddingFile=function(t){e.cropped={image:""};var n=new FileReader;n.onload=function(t){e.$apply(function(){e.image=t.target.result})},n.readAsDataURL(t._file)},s.onBeforeUploadItem=function(t){var n=u(e.cropped.image);t._file=n};var u=function(e){var t;t=e.split(",")[0].indexOf("base64")>=0?atob(e.split(",")[1]):decodeURI(e.split(",")[1]);for(var n=e.split(",")[0].split(":")[1].split(";")[0],a=[],i=0;i<t.length;i++)a.push(t.charCodeAt(i));return new Blob([new Uint8Array(a)],{type:n})};s.onSuccessItem=function(t,n,a,i){console.log(n),e.ok(n)},e.ok=function(e){o.success("Avatar has been updated"),r.close(e)},e.cancel=function(){r.dismiss()}}]),mainApp.controller("dlgChangePasswordController",["$scope","userService","$uibModalInstance","Notification",function(e,t,n,a){e.interacted=function(t){return e.submitted||t.$dirty},e.init=function(){e.failed=!1,e.submitted=!1,e.model={}},e.init(),e.changePassword=function(e){return t.changePassword(e).$promise},e.submit=function(){e.submitted=!0,e.frmPassword.$valid&&e.changePassword(e.model).then(function(t){t.result?e.ok():(e.failed=!0,a.error("Failed to update your password"))})},e.ok=function(e){a.success("Password has been changed successfully"),n.close(e)},e.cancel=function(){n.dismiss()}}]),mainApp.controller("userController",["$scope","userService","imageService","$uibModal",function(e,t,n,a){e.getCurrentUserProfile=function(){return t.getCurrentUserProfile().$promise},e.init=function(){e.currentUser=e.currentUser||null,null==e.currentUser&&e.getCurrentUserProfile().then(function(t){e.currentUser=t})},e.init(),e.updateAvatar=function(){var t=a.open({animation:!1,templateUrl:"app/main/user/dlg-change-avatar.html",controller:"dlgChangeAvatarController",size:"lg",windowClass:"portraitDialog"});t.result.then(function(t){e.currentUser=t,e.currentUser.avatar.url=e.currentUser.avatar.url+"?"+(new Date).getTime(),e.$emit("user:updateAvatar",e.currentUser.avatar.url)},function(){})}}]),mainApp.controller("userDefaultController",["$scope","userService","$uibModal","Notification","$q",function(e,t,n,a,i){e.updateCurrentUserProfile=function(e){return t.updateCurrentUserProfile(e).$promise},e.updateProfile=function(){e.userForm.$valid&&e.updateCurrentUserProfile(e.currentUser).then(function(e){a.success("Update successfully")})},e.changePassword=function(){var e=n.open({animation:!1,templateUrl:"app/main/user/dlg-change-password.html",controller:"dlgChangePasswordController",size:"md",windowClass:"passswordDialog"});e.result.then(function(e){},function(){})},e.validateBankNumber=function(n){var a=i.defer();return t.checkBankNumber({number:n,userName:e.currentUser.userName},function(e){e.result?a.resolve(e):a.reject(e)}),a.promise}}]),mainApp.controller("userRegisterController",["$scope","userService","Notification","$state","$q",function(e,t,n,a,i){e.init=function(){e.newUser={userInfo:{}},e.submitted=!1,e.step=1},e.init(),e.registerUser=function(){e.submitted=!0,e.regForm.$valid&&(e.newUser.userInfo.parentId=e.currentUser.userName,t.register(e.newUser,function(t){e.users=t,n.success("Register successfully"),e.step=2},function(e){n.error("Register failed")}))},e.endRegister=function(){a.reload()},e.interacted=function(t){return e.submitted||t.$dirty},e.validateBankNumber=function(e){var n=i.defer();return t.checkBankNumber({number:e,userName:"*"},function(e){e.result?n.resolve(e):n.reject(e)}),n.promise},e.canIntroduce=function(){return null==e.currentUser||e.currentUser.userName.endsWith("A")||!e.currentUser.parentId}}]),mainApp.factory("userService",["$resource",function(e){return e(":path",{},{getCurrentUserContext:{method:"GET",params:{path:"api/user/getCurrentUserContext"}},getCurrentUserProfile:{method:"GET",params:{path:"api/user/getCurrent"}},getCurrentUserPinInfo:{method:"GET",params:{path:"api/user/getCurrentPin"}},getChildren:{method:"GET",params:{path:"api/user/getChildren",id:"id"},isArray:!0},register:{method:"POST",params:{path:"api/account/register",registerVM:"registerVM"},isArray:!0},updateCurrentUserProfile:{method:"POST",params:{path:"api/user/updateCurrent",userProfileVM:"userProfileVM"}},updateAvatar:{method:"POST",params:{path:"api/user/updateAvatar",avatar:"avatar"}},changePassword:{method:"POST",params:{path:"api/user/changePassword",model:"model"}},checkName:{method:"GET",params:{path:"api/user/checkName",name:"@name"}},checkBankNumber:{method:"GET",params:{path:"api/user/checkBankNumber",number:"@number",userName:"@userName"}},getCurrentAssociation:{method:"GET",params:{path:"api/user/getCurrentAssociation"},isArray:!0}})}]),mainApp.controller("userTreeController",["$scope","userService","_",function(e,t,n){e.getCurrentUserProfile=function(){return t.getCurrentUserProfile().$promise},e.getUserChildren=function(e){return t.getChildren({id:e}).$promise},e.init=function(){e.data=[],e.loadData()},e.loadData=function(){e.getCurrentUserProfile().then(function(t){e.data.push({userId:t.id,displayName:t.displayName,userName:t.userName}),e.loadDataForSingleNode(e.data[0])})},e.loadDataForSingleNode=function(t){t.isLoaded||(t.isLoaded=!0,e.getUserChildren(t.userId).then(function(e){t.nodes=e,t.numberOfChildren||(t.numberOfChildren=n.reduce(t.nodes,function(e,t){return t.userName.endsWith("A")?e+1+t.numberOfChildren:e},0))}))},e.init()}]);