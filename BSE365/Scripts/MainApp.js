var mainApp=angular.module("mainApp",["ui.router","authApp","ngResource"]);mainApp.config(["$stateProvider","$urlRouterProvider",function(r,e){e.otherwise("/"),r.state("home",{url:"/",templateUrl:"app/main/home/home.html"}).state("login",{url:"/login",templateUrl:"app/authentication/login/login.html",controller:"loginController"}).state("pin",{url:"/pin",templateUrl:"app/main/pin/pin.html",controller:"pinController"}).state("user",{"abstract":!0,url:"/user",templateUrl:"app/main/user/user-info.html",controller:"userController"}).state("user.default",{url:"/",templateUrl:"app/main/user/user-info.default.html",controller:"userDefaultController"}).state("user.register",{url:"/register",templateUrl:"app/main/user/user-info.register.html",controller:"userRegisterController"})}]),mainApp.config(["$httpProvider",function(r){r.interceptors.push("authInterceptorService")}]),mainApp.run(["authService",function(r){r.fillAuthData()}]),mainApp.controller("pinController",["$scope","userService","pinService",function(r,e,t){r.getCurrentUserPinInfo=function(){return e.getCurrentUserPinInfo().$promise},r.init=function(){r.currentPinBalance={},r.getCurrentUserPinInfo().then(function(e){r.currentPinBalance=e}),r.transaction={}},r.init(),r.transferPIN=function(){t.transfer(r.transaction,function(e){r.init()})}}]),mainApp.factory("pinService",["$resource",function(r){return r(":path",{},{transfer:{method:"POST",params:{path:"api/pin/transfer",transactionVM:"transactionVM"}}})}]),mainApp.controller("userController",["$scope","userService",function(r,e){r.getCurrentUserProfile=function(){return e.getCurrentUserProfile().$promise},r.init=function(){r.currentUser=r.currentUser||null,null==r.currentUser&&r.getCurrentUserProfile().then(function(e){r.currentUser=e})},r.init()}]),mainApp.controller("userDefaultController",["$scope","userService",function(r,e){}]),mainApp.controller("userRegisterController",["$scope","userService",function(r,e){r.init=function(){r.newUser={userInfo:{}}},r.init(),r.registerUser=function(){r.newUser.userInfo.parentId=r.currentUser.id,e.register(r.newUser,function(r){})}}]),mainApp.factory("userService",["$resource",function(r){return r(":path",{},{getCurrentUserProfile:{method:"GET",params:{path:"api/user/getCurrent"}},getCurrentUserPinInfo:{method:"GET",params:{path:"api/user/getCurrentPin"}},register:{method:"POST",params:{path:"api/account/register",registerVM:"registerVM"}}})}]);